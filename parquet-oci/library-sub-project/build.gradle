/* JMH micro-benchmarking framework */
/*
 * See: https://github.com/melix/jmh-gradle-plugin
 *      https://stackoverflow.com/questions/20443997/how-to-use-jmh-with-gradle
 *      https://gist.github.com/mrbald/7bbb5113c3164d5243314da8c28649a1#file-build-gradle-L33
 */

buildscript {
    repositories {
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "me.champeau.gradle:jmh-gradle-plugin:0.4.5"
    }
}


plugins {
    id 'java'
    id 'application'
    id 'scala'
    id "me.champeau.gradle.jmh" version "0.4.5"
}

//configurations {
//    jmh
//}

sourceSets.main {
    java.srcDirs = ['src/main/java']
}

//sourceSets.jmh {
//    java.srcDirs = ['src/jmh/java']
//    resources.srcDirs = ['src/jmh/resources']
//}

sourceCompatibility = '11'
targetCompatibility = '11'

dependencies {
    /** Apache Drill JDBC Driver**/
    compile files('build/libs/drill-jdbc-all-1.17.0.jar')

    /** Oracle SDK **/
    // https://mvnrepository.com/artifact/com.oracle.oci.sdk/oci-java-sdk-bom
    compile group: 'com.oracle.oci.sdk', name: 'oci-java-sdk-bom', version: '1.13.0', ext: 'pom'

    // https://mvnrepository.com/artifact/com.oracle.oci.sdk/oci-java-sdk-audit
    compile group: 'com.oracle.oci.sdk', name: 'oci-java-sdk-audit', version: '1.13.0'

    // https://mvnrepository.com/artifact/com.oracle.oci.sdk/oci-java-sdk-core
    compile group: 'com.oracle.oci.sdk', name: 'oci-java-sdk-core', version: '1.13.0'

    // https://mvnrepository.com/artifact/com.oracle.oci.sdk/oci-java-sdk-database
    compile group: 'com.oracle.oci.sdk', name: 'oci-java-sdk-database', version: '1.13.0'

    // https://mvnrepository.com/artifact/com.oracle.oci.sdk/oci-java-sdk-objectstorage
    compile group: 'com.oracle.oci.sdk', name: 'oci-java-sdk-objectstorage', version: '1.13.0'

    /** Apache Parquet **/

    // https://mvnrepository.com/artifact/org.apache.avro/avro
    compile group: 'org.apache.avro', name: 'avro', version: '1.8.2'

    // https://mvnrepository.com/artifact/org.apache.parquet/parquet-avro
    compile group: 'org.apache.parquet', name: 'parquet-avro', version: '1.8.1'

    // https://mvnrepository.com/artifact/com.opencsv/opencsv
    compile group: 'com.opencsv', name: 'opencsv', version: '3.8'

    // https://mvnrepository.com/artifact/org.apache.hadoop/hadoop-common
    compile(group: 'org.apache.hadoop', name: 'hadoop-common', version: '3.2.1'){
        exclude group: 'com.sun.jersey', module: 'jersey-server'
    }

    // https://mvnrepository.com/artifact/org.apache.parquet/parquet-tools
    compile group: 'org.apache.parquet', name: 'parquet-tools', version: '1.10.1'

    /** JMH **/
    jmhCompile(sourceSets.main.output)
    jmhCompile(sourceSets.test.output)
    jmhCompile(group: 'org.openjdk.jmh', name: "jmh-core", version: "1.23")
    jmhAnnotationProcessor(group: "org.openjdk.jmh", name: "jmh-generator-annprocess", version: "1.23")
    jmhCompile(configurations.compile)
    jmhCompile(configurations.compileClasspath)
    jmhCompile(configurations.testCompile)
    jmhRuntime(configurations.runtime)
    jmhRuntime(configurations.runtimeClasspath)
    jmhRuntime(configurations.testRuntime)

    /** JUnit **/
    // https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-api
    testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.6.0'
    testRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.6.0'
    jmhCompile group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.6.0'
    jmhRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.6.0'
}

//task benchmark(type: Test) {
//    useJUnitPlatform()
//    group = "verification"
//    testClassesDirs = sourceSets.jmh.output.classesDirs
//    classpath = sourceSets.jmh.runtimeClasspath
//
//    maxHeapSize = "4G"
//
//    // this is only valid pre log4j-2.9
//    systemProperty("org.apache.logging.log4j.simplelog.StatusLogger.level", "DEBUG")
//    // this is valid post log4j-2.9
//    systemProperty("log4j2.debug", "true")
//}

mainClassName = 'library'

test {
    useJUnitPlatform()
}

dependencies {
    implementation 'junit:junit:4.12'
}
