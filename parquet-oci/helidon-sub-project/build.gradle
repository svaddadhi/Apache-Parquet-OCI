buildscript {
    repositories {
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "me.champeau.gradle:jmh-gradle-plugin:0.4.5"
    }
}

//apply plugin: "me.champeau.gradle.jmh"

plugins {
    id 'java'
    id 'application'
    id "me.champeau.gradle.jmh" version "0.4.5"
    id "maven"
}

group = 'helidon.oci.library'
version = '1.0-SNAPSHOT'
sourceCompatibility = 11
targetCompatibility = 11
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

ext {
    helidonversion ='2.0.0-SNAPSHOT'
}

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    compile files('build/libs/drill-jdbc-all-1.17.0.jar')

    /** Testing **/
    testImplementation (
        'junit:junit:4.12',
        'org.junit.jupiter:junit-jupiter-api:5.4.2'
    )
    testRuntime (
            'org.junit.jupiter:junit-jupiter-engine:5.4.2',
            'org.junit.vintage:junit-vintage-engine:5.4.2'
    )

    /** Library **/
    compile project(':library-sub-project')

    /** Helidon **/
    // https://mvnrepository.com/artifact/io.helidon/helidon-dependencies
    compile group: 'io.helidon', name: 'helidon-dependencies', version: '2.0.0-M1', ext: 'pom'

    // https://mvnrepository.com/artifact/io.helidon.microprofile.server/helidon-microprofile-server
    compile group: 'io.helidon.microprofile.server', name: 'helidon-microprofile-server', version: '2.0.0-M3'

    // https://mvnrepository.com/artifact/io.helidon.common/helidon-common
    compile group: 'io.helidon.common', name: 'helidon-common', version: '2.0.0-M3'


    /** Javax **/
    compile 'javax.ws.rs:javax.ws.rs-api:2.1.1'
    compile 'javax.json:javax.json-api:1.1.4'

    testCompileOnly 'org.junit.jupiter:junit-jupiter-api'
}

// define a custom task to copy all dependencies in the runtime classpath
// into build/libs/libs
// uses built-in Copy
task copyLibs(type: Copy) {
    from configurations.runtimeClasspath
    into 'build/libs/libs'
}

// add it as a dependency of built-in task 'assemble'
copyLibs.dependsOn jar
assemble.dependsOn copyLibs

// default jar configuration
// set the main classpath
// add each jar under build/libs/libs into the classpath
jar {
    manifest {
        attributes ('Main-Class': 'helidon.oci.library.Main',
                'Class-Path': configurations.runtimeClasspath.files.collect { "libs/$it.name" }.join(' ')
        )
    }
}

// task to run the class file
task runApp(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'helidon.oci.library.Main'
}

// task to run the jar file
task runJar(type: JavaExec) {
    classpath = files(tasks.jar)
    main = 'helidon.oci.library.Main'
}

tasks.test {
    useJUnitPlatform()
}

mainClassName = 'helidon.oci.library.Main'


